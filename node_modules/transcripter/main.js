const { TextChannel, Client, Collection } = require('discord.js');

class Transcripter {
  constructor(channel, client) {
    this.channel = channel;
    this.client = client;
    this.defaultLimit = 100;
    this.defaultP = false;
    this.defaultPo = "username [id]: content";
    this.defaultMsg = "Nenhuma mensagem foi enviada no ticket."
  }

  async gerarTranscript(config) {
    const { limit = this.defaultLimit, puxar_mensagens_bot = this.defaultP, formatoM = this.defaultPo, semMsgs = this.defaultMsg } = config || {};
    const messages = await this.channel.messages.fetch({ limit });
    let messagesH = new Collection();
    if (puxar_mensagens_bot == false) {
      messagesH = messages.filter(m => !m.author.bot);
    } else {
      messagesH = messages.filter(m => true); 
    }

    let transcript = messagesH
      .map(m => {
        const parts = formatoM.split(" ");
        return parts.map(part => {
          if (part === "username") return m.author.username;
          if (part === "id") return `[${m.author.id}]`;
          if (part === "content") return m.content;
        }).join(" ");
      }).join('\n');
  
    if (!transcript) {
      transcript = semMsgs;
    }

    return transcript;
  }
}

module.exports = Transcripter;
